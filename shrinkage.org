* Shrinkage Methods 
:PROPERTIES:
:header-args: :session R-session :results output value :colnames yes
:END:

#+NAME: round-tbl
#+BEGIN_SRC emacs-lisp :var tbl="" fmt="%.1f"
(mapcar (lambda (row)
          (mapcar (lambda (cell)
                    (if (numberp cell)
                        (format fmt cell)
                      cell))
                  row))
        tbl)
#+end_src

#+BEGIN_SRC R :post round-tbl[:colnames yes](*this*)
library(tidyverse)
library(faraway)
library(broom)
library(magrittr)
#+END_SRC

In this chapter, we look at four methods that allow us to shrink the additional information provided by an abundance of predictors into a more useful form. 

** Principal Components 

Principal components analysis (PCA) is a popular method for finding low-dimensional linear structure in higher dimensional data. 

#+BEGIN_SRC R :file plot.svg :results graphics file
data(fat, package = "faraway")

fat %<>% as_tibble()

par(mfrow = c(1, 3))
plot(neck ~ knee, fat)
plot(chest ~ thigh, fat)
plot(hip ~ wrist, fat)
#+END_SRC

#+RESULTS:
[[file:plot.svg]]

We can see that the body circumferences are strongly correlated. Although we may have many predictors, there may be less information than the number of predictors may suggest. PCA aims to discover this lower dimension of variability in higher dimensional data. 

Suppose we center the matrix of predictors $X$ by subtracting the mean for each variable so that the columns of $X$ have mean zero. We use an $X$ that does not include a column of ones for the intercept term. We now find the orthogonal directions of greatest variation in the data: 

1. Find the $u_1$ such that var $(u_1^T X)$ is maximized subject to $u_1^Tu_1 = 1$
2. Find $u_2$ such that var $(u_2^T X)$ is maximized subject to $u_1^T u_2 = 0$ and $u_2^T u_2 = 1$
3. Keep finding directions of greatest variation orthogonal to those directions we have already found 

Let's write $z_i = u_i^T X$. The $z_i$ are known as the principal components. We can gather together the terms in the matrix form $Z = XU$ where $Z$ and $U$ have columns $z_i$ and $u_i$ respectively. $U$ is called the rotation matrix. We can think of $Z$ as a version of the data rotated to orthogonality. 

#+BEGIN_SRC R :file plot.svg :results graphics file
fat %>%
    select(9:18) %>%
    prcomp() %>>%
    (~ prfat) %>>%
    ("Dimensions of Rotation Matrix U" ? dim(.$rot)) %>>%
    ("Dimensions of Principal Components" ? dim(.$x)) %>>%
    ("Summary:\n\n" ? summary(.))
#+END_SRC

